import dotenv from "dotenv";
dotenv.config();

import hardhat from "hardhat";
const { ethers } = hardhat;

async function main() {
  console.log("üéµ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–µ—Å–Ω–∏ –∏–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...");

  const [caller] = await ethers.getSigners();
  const contractAddress = process.env.CONTRACT_ADDRESS;

  const HSR = await ethers.getContractFactory("HSR");
  const hsr = await HSR.attach(contractAddress);

  const total = await hsr.getNumSongs();
  console.log(`üì¶ –í—Å–µ–≥–æ –ø–µ—Å–µ–Ω: ${total}`);

  for (let i = 1; i <= total; i++) {
    try {
      const details = await hsr.getSongDetails(i);
      console.log(`üé∂ –ü–µ—Å–Ω—è ID ${i}`);
      console.log(`   ‚ñ∂Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: ${details[0]}`);
      console.log(`   üé§ –ê—Ä—Ç–∏—Å—Ç: ${details[1]}`);
      console.log(`   üéº –ñ–∞–Ω—Ä: ${details[2]}`);
      console.log(`   üîë –•—ç—à: ${details[3]}`);
      console.log(`   üí∏ –¶–µ–Ω–∞: ${ethers.formatEther(details[4])} ETH`);
      console.log(`   üõí –ö—É–ø–ª–µ–Ω–æ —Ä–∞–∑: ${details[5]}`);
      console.log("--------------------------------------------------");
    } catch (err) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø–µ—Å–Ω–∏ ${i}:`, err.message);
    }
  }
}

main().catch((err) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", err);
  process.exit(1);
});
